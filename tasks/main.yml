---
- name: Provision Minecraft Server
  ansible.builtin.file:
    path: "{{ minecraft.server_folder }}"
    state: directory
    owner: "{{ minecraft.user }}"
    group: "{{ minecraft.user }}"
    mode: '0755'

- name: Download Minecraft Server
  ansible.builtin.get_url:
    url: "{{ minecraft.download_url }}"
    dest: "{{ minecraft.server_dest }}"
    owner: "{{ minecraft.user }}"
    group: "{{ minecraft.user }}"

- name: Accept the Minecraft EULA
  ansible.builtin.lineinfile:
    path: "{{ minecraft.server_folder }}/eula.txt"
    line: "eula=true"
    create: true
    owner: "{{ minecraft.user }}"
    group: "{{ minecraft.user }}"
    mode: '0644'

- name: Minecraft server.properties
  template:
    src: server.properties.j2
    dest: "{{ minecraft.server_folder }}/server.properties"
    owner: "{{ minecraft.user }}"
    group: "{{ minecraft.user }}"
    mode: '0644'

- name: Whitelist users
  template:
    src: whitelist.json.j2
    dest: "{{ minecraft.server_folder }}/whitelist.json"
    owner: "{{ minecraft.user }}"
    group: "{{ minecraft.user }}"
    mode: '0644'

- name: Ops users
  template:
    src: ops.json.j2
    dest: "{{ minecraft.server_folder }}/ops.json"
    owner: "{{ minecraft.user }}"
    group: "{{ minecraft.user }}"
    mode: '0644'

- name: Create plugins directory if it doesn't exist
  file:
    path: "{{ minecraft.server_folder }}/plugins"
    state: directory
    owner: "{{ minecraft.user }}"
    group: "{{ minecraft.user }}"
    mode: '0644'
  when: "{{ plugins | lenght > 1 }}"

- name: Download and install plugins
  get_url:
    url: "{{ item.url }}"
    dest: "{{ minecraft.server_folder }}/plugins/{{ item.name }}"
    owner: "{{ minecraft.user }}"
    group: "{{ minecraft.user }}"
  loop: "{{ plugins }}"
  when: "{{ plugins | lenght > 1 }}"

- name: Set up Minecraft server service
  template:
    src: minecraft.service.j2
    dest: "/etc/systemd/system/minecraft.service"
  notify: restart minecraft
